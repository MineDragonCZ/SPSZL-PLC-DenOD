#srcfile 'C:\MOSAICAPP\SPSZL-PLC-DENOD\SINKARUSEL\KARUSEL1\PRGMAIN.ST'

#defpou prgMain
  CTU COUNTER_CELISTI,
  CTU COUNTER_KARUSEL,
  bool runKarusel,
  bool runCelisti,
  bool vyrobekCelist1,
  bool vyrobekSwitched

 
#srcfile 'C:\MOSAICAPP\SPSZL-PLC-DENOD\SINKARUSEL\KARUSEL1\PRGMAIN.ST'
#pou prgMain
#srcline 1 ;PROGRAM prgMain

#struct prgMain__temp__
  dint P0__st__,
  dint P1__st__
P     61
prgMain_L0:
 LINK __SizeOf(prgMain__temp__)
; Initialize - dynamic variables
; End initialize - dynamic variables
#srcline 12 ;  pulzyMotoru := NOT(pulzyMotoru);
 LD   bool pulzyMotoru
#debug bool pulzyMotoru
 NEG
 WR   bool pulzyMotoru
#debug_left bool pulzyMotoru
#srcline 13 ;  
#srcline 14 ;  COUNTER_CELISTI(CU := (TIMER AND runCelisti), R := NOT(runCelisti) OR COUNTER_CELISTI.Q, PV := 8);
 LD   TIMER
#debug bool TIMER
 LDX  runCelisti
#debug bool runCelisti
 AND
 WRX  COUNTER_CELISTI~CU
#debug_left bool COUNTER_CELISTI~CU
 LDX  runCelisti
#debug bool runCelisti
 NEG
 LDX  COUNTER_CELISTI~Q
#debug bool COUNTER_CELISTI.Q
 OR  
 WRX  COUNTER_CELISTI~R
#debug_left bool COUNTER_CELISTI~R
 LD   int 8
 WRX  COUNTER_CELISTI~PV
#debug_left int COUNTER_CELISTI~PV
 LEAX COUNTER_CELISTI
 CAL  CTU_L0
#srcline 15 ;  COUNTER_KARUSEL(CU := (TIMER AND runKarusel AND polohaKaruseluOK), R := NOT(runKarusel) OR NOT(polohaKaruseluOK) OR COUNTER_KARUSEL.Q, PV := 13);
 LD   TIMER
#debug bool TIMER
 LDX  runKarusel
#debug bool runKarusel
 AND
 LD   bool polohaKaruseluOK
#debug bool polohaKaruseluOK
 AND
 WRX  COUNTER_KARUSEL~CU
#debug_left bool COUNTER_KARUSEL~CU
 LDX  runKarusel
#debug bool runKarusel
 NEG
 LD   bool polohaKaruseluOK
#debug bool polohaKaruseluOK
 NEG
 OR  
 LDX  COUNTER_KARUSEL~Q
#debug bool COUNTER_KARUSEL.Q
 OR  
 WRX  COUNTER_KARUSEL~R
#debug_left bool COUNTER_KARUSEL~R
 LD   int 13
 WRX  COUNTER_KARUSEL~PV
#debug_left int COUNTER_KARUSEL~PV
 LEAX COUNTER_KARUSEL
 CAL  CTU_L0
#srcline 16 ;  
#srcline 17 ;  IF polohaKaruseluOK AND COUNTER_KARUSEL.CV < 2 THEN
 LD   bool polohaKaruseluOK
#debug bool polohaKaruseluOK
 LDX  COUNTER_KARUSEL~CV
#debug int COUNTER_KARUSEL.CV
 EXTW 
 LD   int 2
 LTS
 AND
 JMC  prgMain_L1
#srcline 18 ;     motorEnable := false;
 LD   bool 0       ; false
 WR   bool motorEnable
#debug_left bool motorEnable
#srcline 19 ;  END_IF
prgMain_L1:
#srcline 21 ;  CASE COUNTER_CELISTI.CV OF
 LDX  COUNTER_CELISTI~CV
#debug int COUNTER_CELISTI.CV
 EXTW 
 WRY  P0__st__
 LD   2
 LDY  P0__st__
 EQ  
 JMC  prgMain_L4
#srcline 22 ;       2:
#srcline 23 ;         motorEnable := false;
 LD   bool 0       ; false
 WR   bool motorEnable
#debug_left bool motorEnable
#srcline 24 ;         zvedaniChapadel := 1;
 LD   bool -1      ; true
 WR   bool zvedaniChapadel
#debug_left bool zvedaniChapadel
#srcline 25 ;         IF NOT(vyrobekSwitched) THEN
 LDX  vyrobekSwitched
#debug bool vyrobekSwitched
 NEG
 JMC  prgMain_L5
#srcline 26 ;            vyrobekSwitched := true;
 LD   bool -1       ; true
 WRX  vyrobekSwitched
#debug_left bool vyrobekSwitched
#srcline 27 ;            vyrobekCelist1 := NOT(vyrobekCelist1);
 LDX  vyrobekCelist1
#debug bool vyrobekCelist1
 NEG
 WRX  vyrobekCelist1
#debug_left bool vyrobekCelist1
#srcline 28 ;         END_IF
prgMain_L5:
#srcline 29 ;       ;
 JMP  prgMain_L3
prgMain_L4:
 LD   4
 LDY  P0__st__
 EQ  
 JMC  prgMain_L7
#srcline 30 ;       4:
#srcline 31 ;         celist1 := vyrobekCelist1;
 LDX  vyrobekCelist1
#debug bool vyrobekCelist1
 WR   bool celist1
#debug_left bool celist1
#srcline 32 ;         celist2 := NOT(vyrobekCelist1);
 LDX  vyrobekCelist1
#debug bool vyrobekCelist1
 NEG
 WR   bool celist2
#debug_left bool celist2
#srcline 33 ;       ;
 JMP  prgMain_L3
prgMain_L7:
 LD   5
 LDY  P0__st__
 EQ  
 JMC  prgMain_L8
#srcline 34 ;       5:
#srcline 35 ;         zvedaniChapadel := 0;
 LD   bool 0       ; false
 WR   bool zvedaniChapadel
#debug_left bool zvedaniChapadel
#srcline 36 ;       ;
 JMP  prgMain_L3
prgMain_L8:
 LD   7
 LDY  P0__st__
 EQ  
 JMC  prgMain_L9
#srcline 37 ;       7:
#srcline 38 ;         vyrobekSwitched := false;
 LD   bool 0       ; false
 WRX  vyrobekSwitched
#debug_left bool vyrobekSwitched
#srcline 39 ;         otacebiChapadel := vyrobekCelist1;
 LDX  vyrobekCelist1
#debug bool vyrobekCelist1
 WR   bool otacebiChapadel
#debug_left bool otacebiChapadel
#srcline 40 ;         runKarusel := true;
 LD   bool -1       ; true
 WRX  runKarusel
#debug_left bool runKarusel
#srcline 41 ;         runCelisti := false;
 LD   bool 0       ; false
 WRX  runCelisti
#debug_left bool runCelisti
#srcline 42 ;       ;
 JMP  prgMain_L3
prgMain_L9:
prgMain_L3:
#srcline 46 ;  CASE COUNTER_KARUSEL.CV OF
 LDX  COUNTER_KARUSEL~CV
#debug int COUNTER_KARUSEL.CV
 EXTW 
 WRY  P1__st__
 LD   1
 LDY  P1__st__
 EQ  
 JMC  prgMain_L11
#srcline 47 ;       1:
#srcline 48 ;         zarazka := true;
 LD   bool -1       ; true
 WR   bool zarazka
#debug_left bool zarazka
#srcline 49 ;         motorEnable := false;
 LD   bool 0       ; false
 WR   bool motorEnable
#debug_left bool motorEnable
#srcline 50 ;         //stroj1HoreDole := true;
#srcline 51 ;         //stroj2HoreDole := true;
#srcline 52 ;         runCelisti := true;
 LD   bool -1       ; true
 WRX  runCelisti
#debug_left bool runCelisti
#srcline 53 ;       ;
 JMP  prgMain_L10
prgMain_L11:
 LD   2
 LDY  P1__st__
 EQ  
 JMC  prgMain_L12
#srcline 54 ;       2:
#srcline 55 ;         vyhod := true;
 LD   bool -1       ; true
 WR   bool vyhod
#debug_left bool vyhod
#srcline 56 ;       ;
 JMP  prgMain_L10
prgMain_L12:
 LD   7
 LDY  P1__st__
 EQ  
 JMC  prgMain_L13
#srcline 57 ;       7:
#srcline 58 ;         vyhod := false;
 LD   bool 0       ; false
 WR   bool vyhod
#debug_left bool vyhod
#srcline 59 ;       ;
 JMP  prgMain_L10
prgMain_L13:
 LD   9
 LDY  P1__st__
 EQ  
 JMC  prgMain_L14
#srcline 60 ;       9:
#srcline 61 ;         stroj1HoreDole := false;
 LD   bool 0       ; false
 WR   bool stroj1HoreDole
#debug_left bool stroj1HoreDole
#srcline 62 ;         stroj2HoreDole := false;
 LD   bool 0       ; false
 WR   bool stroj2HoreDole
#debug_left bool stroj2HoreDole
#srcline 63 ;         zarazka := false;
 LD   bool 0       ; false
 WR   bool zarazka
#debug_left bool zarazka
#srcline 64 ;         motorEnable := true;
 LD   bool -1       ; true
 WR   bool motorEnable
#debug_left bool motorEnable
#srcline 65 ;       ;
 JMP  prgMain_L10
prgMain_L14:
prgMain_L10:
#srcline 67 ;  
#srcline 68 ;  
#srcline 70 ;END_PROGRAM
 ULNK
RET
E     61

; Initialize - variables
P     61
prgMain__InstanceInit__:
 LINK 0
 LD   bool -1   ; true
 WRX  runKarusel
 LD   bool 0   ; false
 WRX  runCelisti
 LD   bool 0   ; false
 WRX  vyrobekCelist1
 LD   bool 0   ; false
 WRX  vyrobekSwitched
 ULNK
RET
E     61
; End initialize - variables
#endpou 



 

#srcfile ''
